/**
 * optimistic.ninja posts API
 * Posts API for optimistic.ninja
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: j@optimistic.ninja
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostAllOf from './PostAllOf';
import PostSummary from './PostSummary';

/**
 * The Post model module.
 * @module model/Post
 * @version 0.0.1-SNAPSHOT
 */
class Post {
    /**
     * Constructs a new <code>Post</code>.
     * @alias module:model/Post
     * @implements module:model/PostSummary
     * @implements module:model/PostAllOf
     * @param authorId {String} author id
     * @param created {Date} date-time of post creation
     * @param updated {Date} date-time of last post update
     * @param markdown {String} post markdown
     */
    constructor(authorId, created, updated, markdown) { 
        PostSummary.initialize(this);PostAllOf.initialize(this, authorId, created, updated, markdown);
        Post.initialize(this, authorId, created, updated, markdown);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authorId, created, updated, markdown) { 
        obj['authorId'] = authorId;
        obj['created'] = created;
        obj['updated'] = updated;
        obj['markdown'] = markdown;
    }

    /**
     * Constructs a <code>Post</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Post} obj Optional instance to populate.
     * @return {module:model/Post} The populated <code>Post</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Post();
            PostSummary.constructFromObject(data, obj);
            PostAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('authorId')) {
                obj['authorId'] = ApiClient.convertToType(data['authorId'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
            if (data.hasOwnProperty('markdown')) {
                obj['markdown'] = ApiClient.convertToType(data['markdown'], 'String');
            }
        }
        return obj;
    }


}

/**
 * post id
 * @member {String} id
 */
Post.prototype['id'] = undefined;

/**
 * post title
 * @member {String} title
 */
Post.prototype['title'] = undefined;

/**
 * post summary
 * @member {String} summary
 */
Post.prototype['summary'] = undefined;

/**
 * image url
 * @member {String} imageUrl
 */
Post.prototype['imageUrl'] = undefined;

/**
 * author id
 * @member {String} authorId
 */
Post.prototype['authorId'] = undefined;

/**
 * date-time of post creation
 * @member {Date} created
 */
Post.prototype['created'] = undefined;

/**
 * date-time of last post update
 * @member {Date} updated
 */
Post.prototype['updated'] = undefined;

/**
 * post markdown
 * @member {String} markdown
 */
Post.prototype['markdown'] = undefined;


// Implement PostSummary interface:
/**
 * post id
 * @member {String} id
 */
PostSummary.prototype['id'] = undefined;
/**
 * post title
 * @member {String} title
 */
PostSummary.prototype['title'] = undefined;
/**
 * post summary
 * @member {String} summary
 */
PostSummary.prototype['summary'] = undefined;
/**
 * image url
 * @member {String} imageUrl
 */
PostSummary.prototype['imageUrl'] = undefined;
// Implement PostAllOf interface:
/**
 * author id
 * @member {String} authorId
 */
PostAllOf.prototype['authorId'] = undefined;
/**
 * date-time of post creation
 * @member {Date} created
 */
PostAllOf.prototype['created'] = undefined;
/**
 * date-time of last post update
 * @member {Date} updated
 */
PostAllOf.prototype['updated'] = undefined;
/**
 * post markdown
 * @member {String} markdown
 */
PostAllOf.prototype['markdown'] = undefined;




export default Post;

