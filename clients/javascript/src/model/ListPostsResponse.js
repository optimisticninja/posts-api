/**
 * optimistic.ninja posts API
 * Posts API for optimistic.ninja
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: j@optimistic.ninja
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostSummary from './PostSummary';

/**
 * The ListPostsResponse model module.
 * @module model/ListPostsResponse
 * @version 0.0.1-SNAPSHOT
 */
class ListPostsResponse {
    /**
     * Constructs a new <code>ListPostsResponse</code>.
     * @alias module:model/ListPostsResponse
     * @param postSummaries {Array.<module:model/PostSummary>} list of post summaries
     * @param pageCount {Number} number of pages
     */
    constructor(postSummaries, pageCount) { 
        
        ListPostsResponse.initialize(this, postSummaries, pageCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, postSummaries, pageCount) { 
        obj['postSummaries'] = postSummaries;
        obj['pageCount'] = pageCount;
    }

    /**
     * Constructs a <code>ListPostsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListPostsResponse} obj Optional instance to populate.
     * @return {module:model/ListPostsResponse} The populated <code>ListPostsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListPostsResponse();

            if (data.hasOwnProperty('postSummaries')) {
                obj['postSummaries'] = ApiClient.convertToType(data['postSummaries'], [PostSummary]);
            }
            if (data.hasOwnProperty('nextPage')) {
                obj['nextPage'] = ApiClient.convertToType(data['nextPage'], 'Number');
            }
            if (data.hasOwnProperty('pageCount')) {
                obj['pageCount'] = ApiClient.convertToType(data['pageCount'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * list of post summaries
 * @member {Array.<module:model/PostSummary>} postSummaries
 */
ListPostsResponse.prototype['postSummaries'] = undefined;

/**
 * next page
 * @member {Number} nextPage
 */
ListPostsResponse.prototype['nextPage'] = undefined;

/**
 * number of pages
 * @member {Number} pageCount
 */
ListPostsResponse.prototype['pageCount'] = undefined;






export default ListPostsResponse;

