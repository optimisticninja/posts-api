/**
 * optimistic.ninja posts API
 * Posts API for optimistic.ninja
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: j@optimistic.ninja
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostUpdateMask from './PostUpdateMask';

/**
 * The UpdatePostRequest model module.
 * @module model/UpdatePostRequest
 * @version 0.0.1-SNAPSHOT
 */
class UpdatePostRequest {
    /**
     * Constructs a new <code>UpdatePostRequest</code>.
     * update post request
     * @alias module:model/UpdatePostRequest
     * @param updateMask {Array.<module:model/PostUpdateMask>} 
     */
    constructor(updateMask) { 
        
        UpdatePostRequest.initialize(this, updateMask);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, updateMask) { 
        obj['updateMask'] = updateMask;
    }

    /**
     * Constructs a <code>UpdatePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePostRequest} obj Optional instance to populate.
     * @return {module:model/UpdatePostRequest} The populated <code>UpdatePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePostRequest();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('markdown')) {
                obj['markdown'] = ApiClient.convertToType(data['markdown'], 'String');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('updateMask')) {
                obj['updateMask'] = ApiClient.convertToType(data['updateMask'], [PostUpdateMask]);
            }
        }
        return obj;
    }


}

/**
 * post title
 * @member {String} title
 */
UpdatePostRequest.prototype['title'] = undefined;

/**
 * post summary
 * @member {String} summary
 */
UpdatePostRequest.prototype['summary'] = undefined;

/**
 * post markdown
 * @member {String} markdown
 */
UpdatePostRequest.prototype['markdown'] = undefined;

/**
 * image url
 * @member {String} imageUrl
 */
UpdatePostRequest.prototype['imageUrl'] = undefined;

/**
 * @member {Array.<module:model/PostUpdateMask>} updateMask
 */
UpdatePostRequest.prototype['updateMask'] = undefined;






export default UpdatePostRequest;

